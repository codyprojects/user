openapi: 3.0.3
info:
  title: User API
  version: 1.0.0
  description: This is the API for User Service.
servers:
  - url: https://api.fuwumai.com/v1
    description: Production server
  - url: https://staging.fuwumai.com/v1
    description: Staging server
  - url: http://localhost:8080/v1
    description: Development server
tags:
  - name: user
    description: Operations about user
paths:
  /user:
    post:
      tags:
        - user
      summary: 'Returns details about a particular user'
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: created
          content: { }
  /user/{userId}:
    get:
      tags:
        - user
      summary: Returns details about a particular user
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Details about a user by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                user:
                  $ref: '#/components/examples/User'
        400:
          description: Invalid ID supplied
          content: { }
        404:
          description: User not found
          content: { }
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid username/password supplied
          content: { }
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
          content: { }

components:
  schemas:
    User:
      type: object
      required:
        - id
        - username
        - password
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          description: User Status
          format: int32
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  examples:
    User:
      summary: User data example
      value:
        id: 12345678
        username: iamuser
        password: T123456
        firstName: Thomas
        lastName: Edison
        email: thomas@GE.com
        phone: 13100002222
        userStatus: 1